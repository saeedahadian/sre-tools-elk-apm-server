######################### APM Server Configuration #########################

################################ APM Server ################################

apm-server:
  # Defines the host and port the server is listening on. Use "unix:/path/to.sock" to listen on a unix domain socket.
  host: "0.0.0.0:8200"

  #---------------------------- APM Server - Agent Configuration ----------------------------

  # When using APM agent configuration, information fetched from Kibana will be cached in memory for some time.
  # Specify cache key expiration via this setting. Default is 30 seconds.
  #agent.config.cache.expiration: 30s

  kibana:
    # For APM Agent configuration in Kibana, enabled must be true.
    enabled: false

    # Scheme and port can be left out and will be set to the default (`http` and `5601`).
    # In case you specify an additional path, the scheme is required: `http://localhost:5601/path`.
    # IPv6 addresses should always be defined as: `https://[2001:db8::1]:5601`.
    host: "kib"

    # Optional protocol and basic auth credentials.
    protocol: "https"
    #username: "elastic"
    #password: "DdjuKkCEcdG2KkOtK4FJ"

    # Optional HTTP path.
    #path: ""

    # Enable custom SSL settings. Set to false to ignore custom SSL settings for secure communication.
    #ssl.enabled: true

#================================ Outputs =================================

# Configure the output to use when sending the data collected by apm-server.

#-------------------------- Elasticsearch output --------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  # Scheme and port can be left out and will be set to the default (`http` and `9200`).
  # In case you specify and additional path, the scheme is required: `http://localhost:9200/path`.
  # IPv6 addresses should always be defined as: `https://[2001:db8::1]:9200`.
  hosts: ["es01"]

  # Boolean flag to enable or disable the output module.
  enabled: true

  # Set gzip compression level.
  #compression_level: 0

  # Protocol - either `http` (default) or `https`.
  protocol: "https"

  # Authentication credentials - either API key or username/password.
  #api_key: "id:api_key"
  username: "${SERVER_SSL_USERNAME}"
  password: "${SERVER_SSL_PASSWORD}"

  # Enable custom SSL settings. Set to false to ignore custom SSL settings for secure communication.
  ssl.enabled: true

  # List of root certificates for HTTPS server verifications.
  ssl.certificate_authorities: "${CERTS_DIR}/ca/ca.crt"

  # Certificate for SSL client authentication.
  ssl.certificate: "${CERTS_DIR}/apm01/apm01.crt"

  # Client Certificate Key
  ssl.key: "${CERTS_DIR}/apm01/apm01.key"
